version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  weather-loader-component:
    container_name: weather-loader-component
    build: ./WeatherLoaderComponent/
    ports:
      - "8081:8081"
    env_file:
      - ./envs/env-weather-loader-component.env
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "weather-services"
      logging: "promtail"
      logging_jobname: "containerlogs"

  weather-metrics-component:
    container_name: weather-metrics-component
    build: ./WeatherMetricsComponent/
    ports:
      - "8082:8082"
    env_file:
      - ./envs/env-weather-metrics-component.env
    depends_on:
      - weather-loader-component
      - redis
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "weather-services"
      logging: "promtail"
      logging_jobname: "containerlogs"

  redis:
    image: "redis:7.0.11-alpine"
    networks:
      - monitor-net
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass lqelGuT43CugUCsTlTvw9zygmQtBOSrr --maxmemory 16mb
    labels:
      org.label-schema.group: "weather-services"
      logging: "promtail"
      logging_jobname: "containerlogs"

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
      logging: "promtail"
      logging_jobname: "containerlogs"

  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter:v0.24.0
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    volumes:
      - './blackbox/blackbox.yml:/etc/blackbox/blackbox.yml'
    depends_on:
      - weather-metrics-component
      - weather-loader-component
    ports:
      - "9115:9115"
    networks:
        - monitor-net
    labels:
        org.label-schema.group: "monitoring"
        logging: "promtail"
        logging_jobname: "containerlogs"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  promtail:
    container_name: promtail
    image: grafana/promtail:2.8.0
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock

    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor-net
    depends_on:
      - loki

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
      logging: "promtail"
      logging_jobname: "containerlogs"

  otel-collector:
    image: otel/opentelemetry-collector:0.79.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./otel/otel-collector.yaml:/etc/otel-collector.yaml
    networks:
      - monitor-net
    ports:
      - "4317"
      - "4318"
    depends_on:
      - tempo
    labels:
      org.label-schema.group: "monitoring"
      logging: "promtail"
      logging_jobname: "containerlogs"

  tempo:
    image: grafana/tempo:latest
    command: [ "--config.file=/etc/tempo/tempo.yaml" ]
    volumes:
      - ./tempo:/etc/tempo
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
      logging: "promtail"
      logging_jobname: "containerlogs"

  redis-exporter:
    image: oliver006/redis_exporter
    command: -redis.addr redis://redis:6379 -redis.password lqelGuT43CugUCsTlTvw9zygmQtBOSrr
    ports:
      - "9121:9121"
    networks:
      - monitor-net